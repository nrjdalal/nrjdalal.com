{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "app-layout",
  "type": "registry:file",
  "dependencies": [
    "next",
    "tailwindcss",
    "react",
    "@remixicon/react",
    "next-themes",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:file",
      "path": "app/layout.tsx",
      "target": "app/layout.tsx",
      "content": "import type { Metadata } from \"next\"\nimport { Geist, Geist_Mono } from \"next/font/google\"\nimport \"./globals.css\"\nimport Navbar from \"@/components/navbar\"\nimport { ThemeProvider } from \"@/components/nui/theme-provider\"\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n})\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n})\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <ThemeProvider>\n          <Navbar />\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  )\n}\n"
    },
    {
      "type": "registry:file",
      "path": "app/globals.css",
      "target": "app/globals.css",
      "content": "@import \"tailwindcss\";\n\n@plugin 'tailwindcss-animate';\n\n@custom-variant dark (&:is(.dark *));\n\n@theme {\n  --color-background: hsl(var(--background));\n  --color-foreground: hsl(var(--foreground));\n\n  --color-card: hsl(var(--card));\n  --color-card-foreground: hsl(var(--card-foreground));\n\n  --color-popover: hsl(var(--popover));\n  --color-popover-foreground: hsl(var(--popover-foreground));\n\n  --color-primary: hsl(var(--primary));\n  --color-primary-foreground: hsl(var(--primary-foreground));\n\n  --color-secondary: hsl(var(--secondary));\n  --color-secondary-foreground: hsl(var(--secondary-foreground));\n\n  --color-muted: hsl(var(--muted));\n  --color-muted-foreground: hsl(var(--muted-foreground));\n\n  --color-accent: hsl(var(--accent));\n  --color-accent-foreground: hsl(var(--accent-foreground));\n\n  --color-destructive: hsl(var(--destructive));\n  --color-destructive-foreground: hsl(var(--destructive-foreground));\n\n  --color-border: hsl(var(--border));\n  --color-input: hsl(var(--input));\n  --color-ring: hsl(var(--ring));\n\n  --color-chart-1: hsl(var(--chart-1));\n  --color-chart-2: hsl(var(--chart-2));\n  --color-chart-3: hsl(var(--chart-3));\n  --color-chart-4: hsl(var(--chart-4));\n  --color-chart-5: hsl(var(--chart-5));\n\n  --color-sidebar: hsl(var(--sidebar-background));\n  --color-sidebar-foreground: hsl(var(--sidebar-foreground));\n  --color-sidebar-primary: hsl(var(--sidebar-primary));\n  --color-sidebar-primary-foreground: hsl(var(--sidebar-primary-foreground));\n  --color-sidebar-accent: hsl(var(--sidebar-accent));\n  --color-sidebar-accent-foreground: hsl(var(--sidebar-accent-foreground));\n  --color-sidebar-border: hsl(var(--sidebar-border));\n  --color-sidebar-ring: hsl(var(--sidebar-ring));\n\n  --radius-lg: var(--radius);\n  --radius-md: calc(var(--radius) - 2px);\n  --radius-sm: calc(var(--radius) - 4px);\n\n  --animate-accordion-down: accordion-down 0.2s ease-out;\n  --animate-accordion-up: accordion-up 0.2s ease-out;\n\n  @keyframes accordion-down {\n    from {\n      height: 0;\n    }\n    to {\n      height: var(--radix-accordion-content-height);\n    }\n  }\n  @keyframes accordion-up {\n    from {\n      height: var(--radix-accordion-content-height);\n    }\n    to {\n      height: 0;\n    }\n  }\n}\n\n/*\n  The default border color has changed to `currentColor` in Tailwind CSS v4,\n  so we've added these compatibility styles to make sure everything still\n  looks the same as it did with Tailwind CSS v3.\n\n  If we ever want to remove these styles, we need to add an explicit border\n  color utility to any element that depends on these defaults.\n*/\n@layer base {\n  *,\n  ::after,\n  ::before,\n  ::backdrop,\n  ::file-selector-button {\n    border-color: var(--color-gray-200, currentColor);\n  }\n}\n\n@layer utilities {\n  body {\n    font-family: Arial, Helvetica, sans-serif;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 240 10% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 240 10% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 240 10% 3.9%;\n    --primary: 240 5.9% 10%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 240 4.8% 95.9%;\n    --secondary-foreground: 240 5.9% 10%;\n    --muted: 240 4.8% 95.9%;\n    --muted-foreground: 240 3.8% 46.1%;\n    --accent: 240 4.8% 95.9%;\n    --accent-foreground: 240 5.9% 10%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 240 5.9% 90%;\n    --input: 240 5.9% 90%;\n    --ring: 240 10% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n  .dark {\n    --background: 240 10% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 240 10% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 240 10% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 240 5.9% 10%;\n    --secondary: 240 3.7% 15.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 240 3.7% 15.9%;\n    --muted-foreground: 240 5% 64.9%;\n    --accent: 240 3.7% 15.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 240 3.7% 15.9%;\n    --input: 240 3.7% 15.9%;\n    --ring: 240 4.9% 83.9%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n"
    },
    {
      "type": "registry:component",
      "path": "components/navbar.tsx",
      "target": "components/navbar.tsx",
      "content": "\"use client\"\n\nimport { ThemeToggle } from \"@/components/nui/theme-provider\"\nimport {\n  Drawer,\n  DrawerContent,\n  DrawerDescription,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/components/ui/drawer\"\nimport { cn } from \"@/lib/utils\"\nimport {\n  RiArrowLeftLongLine,\n  RiArrowUpSLine,\n  RiBrushAiLine,\n  RiCodeAiFill,\n  RiCodeAiLine,\n  RiGithubFill,\n  RiLinkedinBoxFill,\n  RiMenu4Fill,\n  RiTwitterXFill,\n} from \"@remixicon/react\"\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\nimport { FC, useState } from \"react\"\n\nconst doesPathMatchHref = (pathname: string, href: string): boolean => {\n  const cleanedPathname = pathname.split(/[?#]/)[0]\n\n  if (href === \"/\") {\n    return (\n      cleanedPathname === \"/\" ||\n      pathname.startsWith(\"/#\") ||\n      pathname.startsWith(\"/?\")\n    )\n  }\n\n  if (href === cleanedPathname) {\n    return true\n  }\n\n  if (href === \"/ui\") {\n    return (\n      cleanedPathname === \"/ui\" ||\n      pathname.startsWith(\"/ui#\") ||\n      pathname.startsWith(\"/ui?\")\n    )\n  }\n\n  const regex = new RegExp(`^${href}/[^/]+.*$`)\n  return regex.test(cleanedPathname)\n}\n\nconst navItems = [\n  { name: \"home\", href: \"/\" },\n  { name: \"blogs\", href: \"/blogs\" },\n  { name: \"projects\", href: \"/projects\" },\n  { name: \"contact\", href: \"/contact\" },\n]\n\nconst uiNavItems = [\n  { name: \"home\", href: \"/ui\" },\n  { name: \"docs\", href: \"/ui/docs\" },\n  { name: \"components\", href: \"/ui/components\" },\n  { name: \"blocks\", href: \"/ui/blocks\" },\n]\n\nconst socialLinks = [\n  { href: \"https://github.com/nrjdalal\", icon: RiGithubFill },\n  { href: \"https://www.linkedin.com/in/nrjdalal\", icon: RiLinkedinBoxFill },\n  { href: \"https://x.com/nrjdalal_com\", icon: RiTwitterXFill },\n]\n\ninterface NavigationLinksProps {\n  items: { name: string; href: string }[]\n  hoveredItem: string | null\n  setHoveredItem: (item: string | null) => void\n  pathname: string\n}\n\nconst NavigationLinks: FC<NavigationLinksProps> = ({\n  items,\n  hoveredItem,\n  setHoveredItem,\n  pathname,\n}) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <>\n      <div className=\"text-muted-foreground hidden cursor-pointer items-center divide-x font-medium lg:flex\">\n        {items.map((item) => (\n          <Link\n            key={item.name}\n            href={item.href}\n            className={cn(\n              \"group relative flex h-full items-center px-7.5\",\n              doesPathMatchHref(pathname, item.href)\n                ? \"text-foreground\"\n                : \"hover:text-foreground\",\n            )}\n            onMouseEnter={() => setHoveredItem(item.href)}\n            onMouseLeave={() => setHoveredItem(null)}\n          >\n            {item.name}\n            <span\n              className={cn(\n                \"bg-foreground absolute bottom-0 left-0 h-[2px] transition-all ease-in-out\",\n                doesPathMatchHref(pathname, item.href)\n                  ? hoveredItem && hoveredItem !== item.href\n                    ? \"w-0 duration-1000\"\n                    : \"w-full duration-500\"\n                  : \"w-0 duration-1000 group-hover:w-[90%]\",\n              )}\n            />\n          </Link>\n        ))}\n        {socialLinks.map((link) => (\n          <Link\n            key={link.href}\n            href={link.href}\n            target=\"_blank\"\n            className=\"hover:text-foreground group relative flex aspect-square h-full items-center justify-center\"\n          >\n            <link.icon className=\"size-6\" />\n            <RiArrowUpSLine className=\"absolute top-0 right-0 size-4 rotate-45 opacity-0 transition-opacity duration-300 group-hover:opacity-100\" />\n            <span className=\"bg-foreground absolute bottom-0 left-0 h-[2px] w-0 transition-all duration-500 ease-in-out group-hover:w-full\" />\n          </Link>\n        ))}\n        <ThemeToggle />\n      </div>\n      <Drawer open={open} onOpenChange={setOpen}>\n        <DrawerTrigger className=\"text-foreground flex h-full w-16 cursor-pointer items-center justify-center border-l lg:hidden\">\n          <RiMenu4Fill className=\"size-6\" />\n        </DrawerTrigger>\n        <DrawerContent className=\"lg:hidden\">\n          <DrawerHeader className=\"sr-only\">\n            <DrawerTitle>Menu</DrawerTitle>\n            <DrawerDescription>Navigation links</DrawerDescription>\n          </DrawerHeader>\n          <div className=\"relative mt-8 px-14 pb-14\">\n            <span className=\"bg-border absolute top-0 left-0 h-px w-full\" />\n            <span className=\"bg-border absolute bottom-14 left-0 h-px w-full\" />\n            <span className=\"bg-border absolute -top-14 left-14 h-full w-px\" />\n            <span className=\"bg-border absolute right-14 bottom-0 h-full w-px\" />\n            <span className=\"text-foreground/50 absolute -right-8 bottom-48 flex rotate-270 items-center gap-x-2 text-xs\">\n              <RiArrowLeftLongLine className=\"size-3.5\" /> Switch dark mode\n            </span>\n            <span className=\"absolute right-0 bottom-14 aspect-square h-14\">\n              <ThemeToggle />\n            </span>\n            <div className=\"mx-auto flex w-full flex-col items-center\">\n              {items.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={cn(\n                    \"group relative flex h-14 w-full items-center justify-center px-7.5\",\n                    doesPathMatchHref(pathname, item.href)\n                      ? \"text-foreground\"\n                      : \"text-muted-foreground hover:text-foreground\",\n                  )}\n                  onMouseEnter={() => setHoveredItem(item.href)}\n                  onMouseLeave={() => setHoveredItem(null)}\n                  onClick={() => setOpen(false)}\n                >\n                  {item.name}\n                  <span\n                    className={cn(\n                      \"bg-border/50 absolute left-0 -z-10 h-14 transition-all ease-in-out\",\n                      doesPathMatchHref(pathname, item.href)\n                        ? hoveredItem && hoveredItem !== item.href\n                          ? \"w-0 duration-1000\"\n                          : \"w-full duration-1000\"\n                        : \"w-0 duration-1000 group-hover:w-[95%]\",\n                    )}\n                  />\n                </Link>\n              ))}\n              <div className=\"flex h-14 w-full justify-between divide-x border-t\">\n                {socialLinks.map((link) => (\n                  <Link\n                    key={link.href}\n                    href={link.href}\n                    target=\"_blank\"\n                    className=\"hover:text-foreground group relative flex h-full w-full items-center justify-center\"\n                  >\n                    <link.icon className=\"size-6\" />\n                    <RiArrowUpSLine className=\"absolute top-0 right-0 size-4 rotate-45 opacity-0 transition-opacity duration-300 group-hover:opacity-100\" />\n                    <span className=\"bg-foreground absolute bottom-0 left-0 h-[2px] w-0 transition-all duration-500 ease-in-out group-hover:w-full\" />\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </DrawerContent>\n      </Drawer>\n    </>\n  )\n}\n\nexport default function Navbar() {\n  const pathname = usePathname()\n  const [hoveredItem, setHoveredItem] = useState<string | null>(null)\n\n  return (\n    <div className=\"bg-background sticky top-0 z-50 flex h-14 w-full justify-between border-b\">\n      <div className=\"flex divide-x font-mono font-medium\">\n        <Link\n          href=\"/\"\n          className={cn(\n            \"hover:bg-border/50 flex h-full min-w-48 cursor-pointer items-center gap-x-2 px-5 lg:min-w-64\",\n            pathname.startsWith(\"/ui\") && \"hidden\",\n          )}\n        >\n          <RiCodeAiLine className=\"size-6\" />\n          <p>NRJDALAL.</p>\n        </Link>\n        <Link\n          href=\"/ui\"\n          className={cn(\n            \"hover:bg-border/50 flex h-full cursor-pointer items-center gap-x-2 px-5\",\n            pathname.startsWith(\"/ui\") && \"min-w-48 lg:min-w-64\",\n          )}\n        >\n          <RiBrushAiLine className=\"size-6\" />\n          <p className={cn(!pathname.startsWith(\"/ui\") && \"hidden\")}>\n            nrjdalalUI.\n          </p>\n        </Link>\n        <Link\n          href=\"/\"\n          className={cn(\n            \"hidden\",\n            pathname.startsWith(\"/ui\") &&\n              \"hover:bg-border/50 flex h-full cursor-pointer items-center justify-center gap-x-2 border-r px-5\",\n          )}\n        >\n          <RiCodeAiFill className=\"size-6\" />\n        </Link>\n      </div>\n\n      <NavigationLinks\n        items={pathname.startsWith(\"/ui\") ? uiNavItems : navItems}\n        hoveredItem={hoveredItem}\n        setHoveredItem={setHoveredItem}\n        pathname={pathname}\n      />\n    </div>\n  )\n}\n"
    },
    {
      "type": "registry:component",
      "path": "components/nui/theme-provider.tsx",
      "target": "components/nui/theme-provider.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { RiContrast2Fill, RiMoonFill, RiSunFill } from \"@remixicon/react\"\nimport { ThemeProvider as NextThemesProvider, useTheme } from \"next-themes\"\nimport { useState } from \"react\"\n\nexport const ThemeToggle = () => {\n  const { theme, setTheme } = useTheme()\n  const [system, setSystem] = useState(false)\n\n  const smartToggle = () => {\n    if (theme === \"system\") {\n      const prefersDarkScheme = window.matchMedia(\n        \"(prefers-color-scheme: dark)\",\n      ).matches\n      setTheme(prefersDarkScheme ? \"light\" : \"dark\")\n      setSystem(false)\n    } else {\n      setTheme(\"system\")\n      setSystem(true)\n    }\n  }\n\n  return (\n    <Button\n      variant=\"ghost\"\n      className=\"aspect-square size-full rounded-none [&_svg]:size-5\"\n      onClick={smartToggle}\n      aria-label=\"Switch between system/light/dark version\"\n    >\n      {system ? (\n        <RiContrast2Fill aria-hidden=\"true\" />\n      ) : (\n        <>\n          <RiSunFill className=\"dark:hidden\" aria-hidden=\"true\" />\n          <RiMoonFill className=\"hidden dark:block\" aria-hidden=\"true\" />\n        </>\n      )}\n    </Button>\n  )\n}\n\nexport const ThemeProvider = ({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) => {\n  return (\n    <NextThemesProvider\n      attribute=\"class\"\n      defaultTheme=\"system\"\n      enableSystem\n      disableTransitionOnChange\n      {...props}\n    >\n      {children}\n    </NextThemesProvider>\n  )\n}\n"
    },
    {
      "type": "registry:lib",
      "path": "lib/utils.ts",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"
    },
    {
      "type": "registry:ui",
      "path": "components/ui/button.tsx",
      "target": "components/ui/button.tsx",
      "content": "import { cn } from \"@/lib/utils\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-hidden focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-xs hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
    }
  ]
}
